{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_BY_CREATOR, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\nexport default ((state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'END_LOADING':\n      return {\n        ...state,\n        isLoading: false\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    case FETCH_BY_SEARCH:\n    case FETCH_BY_CREATOR:\n      return {\n        ...state,\n        posts: action.payload.data\n      };\n    case FETCH_POST:\n      return {\n        ...state,\n        post: action.payload.post\n      };\n    case LIKE:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map(post => {\n          if (post._id == +action.payload._id) {\n            return action.payload;\n          }\n          return post;\n        })\n      };\n    case CREATE:\n      return {\n        ...state,\n        posts: [...state.posts, action.payload]\n      };\n    case UPDATE:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    case DELETE:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["FETCH_ALL","FETCH_BY_SEARCH","FETCH_BY_CREATOR","FETCH_POST","CREATE","UPDATE","DELETE","LIKE","COMMENT","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"sources":["C:/Users/ptgrd/OneDrive/Desktop/project_mern_memories/client/src/reducers/posts.js"],"sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_BY_CREATOR, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return { ...state, isLoading: true };\n    case 'END_LOADING':\n      return { ...state, isLoading: false };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n    case FETCH_BY_SEARCH:\n    case FETCH_BY_CREATOR:\n      return { ...state, posts: action.payload.data };\n    case FETCH_POST:\n      return { ...state, post: action.payload.post };\n    case LIKE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n          if (post._id == +action.payload._id) {\n            return action.payload;\n          }\n          return post;\n        }),\n      };\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n    default:\n      return state;\n  }\n};\n\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,UAAU,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,QAAQ,0BAA0B;AAE1I,gBAAe,CAACC,KAAK,GAAG;EAAEC,SAAS,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAG,CAAC,EAAEC,MAAM,KAAK;EACjE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClB,OAAO;QAAE,GAAGJ,KAAK;QAAEC,SAAS,EAAE;MAAK,CAAC;IACtC,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGD,KAAK;QAAEC,SAAS,EAAE;MAAM,CAAC;IACvC,KAAKV,SAAS;MACZ,OAAO;QACL,GAAGS,KAAK;QACRE,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACC,IAAI;QAC1BC,WAAW,EAAEJ,MAAM,CAACE,OAAO,CAACE,WAAW;QACvCC,aAAa,EAAEL,MAAM,CAACE,OAAO,CAACG;MAChC,CAAC;IACH,KAAKhB,eAAe;IACpB,KAAKC,gBAAgB;MACnB,OAAO;QAAE,GAAGO,KAAK;QAAEE,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACC;MAAK,CAAC;IACjD,KAAKZ,UAAU;MACb,OAAO;QAAE,GAAGM,KAAK;QAAES,IAAI,EAAEN,MAAM,CAACE,OAAO,CAACI;MAAK,CAAC;IAChD,KAAKX,IAAI;MACP,OAAO;QAAE,GAAGE,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,GAAG,CAAED,IAAI,IAAMA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,OAAO,CAACM,GAAG,GAAGR,MAAM,CAACE,OAAO,GAAGI,IAAK;MAAE,CAAC;IAClH,KAAKV,OAAO;MACV,OAAO;QACL,GAAGC,KAAK;QACRE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,GAAG,CAAED,IAAI,IAAK;UAC/B,IAAIA,IAAI,CAACE,GAAG,IAAI,CAACR,MAAM,CAACE,OAAO,CAACM,GAAG,EAAE;YACnC,OAAOR,MAAM,CAACE,OAAO;UACvB;UACA,OAAOI,IAAI;QACb,CAAC;MACH,CAAC;IACH,KAAKd,MAAM;MACT,OAAO;QAAE,GAAGK,KAAK;QAAEE,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAK,EAAEC,MAAM,CAACE,OAAO;MAAE,CAAC;IAC9D,KAAKT,MAAM;MACT,OAAO;QAAE,GAAGI,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,GAAG,CAAED,IAAI,IAAMA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,OAAO,CAACM,GAAG,GAAGR,MAAM,CAACE,OAAO,GAAGI,IAAK;MAAE,CAAC;IAClH,KAAKZ,MAAM;MACT,OAAO;QAAE,GAAGG,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACU,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,OAAO;MAAE,CAAC;IACvF;MACE,OAAOL,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}